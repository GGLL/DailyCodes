<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xsi:schemaLocation="
 http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-4.2.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">
 <!-- 
  启用Spring基于annotation的DI，使用户可以在SpringMVC中使用Spring的强大功能 
     激活@Required等标注 -->
 <context:annotation-config></context:annotation-config>
 
 <!-- DispatcherServlet上下文，只搜索@Controller标注的类bean,忽略其他类型的bean,入@Service -->
 <context:component-scan base-package="com.imooc.mvcdemo">
  <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
 </context:component-scan>
 <!-- HandlerMapping无需配置，Spring MVC可以默认启动
   DefaultAnnotationHandlerMapping annotation-driven HandlerMapping
  -->
  
 <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
 <mvc:annotation-driven></mvc:annotation-driven>
 
 <!-- 静态资源处理，css，js，imgs -->
 <!-- 
 <mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources> 
 -->
 
 <!-- 
 	配置ViewResolver。可以用多个ViewResolver。
 	使用order属性排序。
 	InternalResourceViewResolver放在最后。
  -->
 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
  <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
  <property name="prefix" value="/WEB-INF/jsps/"></property>
  <property name="suffix" value=".jsp"></property>
 </bean>
 
 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
   <property name="maxUploadSize" value="209715200"></property>
   <property name="defaultEncoding" value="UTF-8"></property>
   <property name="resolveLazily" value="true"></property>
 </bean>
</beans>
